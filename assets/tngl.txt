defDevice($p400k, 0x00, 0xff, 26px, $PORTA, 0xff, 22px, $PORTB, 0xff, 44px, $PORTC, 0xff, {
  // Bluetooth
  const button = 0xA2($toggl);
  const boolean = Boolean();
  const negate = Negate();
  const event = EventRelay($light, 0xff);

  button->[0x00]boolean;
  boolean->[0x00]negate;
  negate->[0x00]event;
  // Serial
});

defSegment($front, 0x00, { slice($PORTB, 19px, 20px, -1px); });

defSegment($porta, 0x00, { slice($PORTC, 0px, 43px, 1px); slice($PORTA, 23px, 24px, -1px); });

// This is a comment
  // State machine
  catchEvent($INIT).emitAs($s_an2).emitAs($b_an3).emitAs($p_an1).emitAs($f_an1).emitAs($d_an3);
  var TRANSITION_TIME = 0.5s;
  // Printer standby
  catchEvent($s_an1).emitAs($s_rst).setValue(100%).emitAs($_san1);
  catchEvent($s_an2).emitAs($s_rst).setValue(100%).emitAs($_san2);
  catchEvent($s_an3).emitAs($s_rst).setValue(100%).emitAs($_san3);
  catchEvent($s_rst).setValue(0%).emitAs($_san1).emitAs($_san2).emitAs($_san3);
  // Printer busy
  catchEvent($b_an1).emitAs($b_rst).setValue(100%).emitAs($_ban1);
  catchEvent($b_an2).emitAs($b_rst).setValue(100%).emitAs($_ban2);
  catchEvent($b_an3).emitAs($b_rst).setValue(100%).emitAs($_ban3);
  catchEvent($b_rst).setValue(0%).emitAs($_ban1).emitAs($_ban2).emitAs($_ban3);
  // Printer paused
  catchEvent($p_an1).emitAs($p_rst).setValue(100%).emitAs($_pan1);
  catchEvent($p_an2).emitAs($p_rst).setValue(100%).emitAs($_pan2);
  catchEvent($p_an3).emitAs($p_rst).setValue(100%).emitAs($_pan3);
  catchEvent($p_rst).setValue(0%).emitAs($_pan1).emitAs($_pan2).emitAs($_pan3);
  // Printer fillament change
  catchEvent($f_an1).emitAs($f_rst).setValue(100%).emitAs($_fan1);
  catchEvent($f_an2).emitAs($f_rst).setValue(100%).emitAs($_fan2);
  catchEvent($f_an3).emitAs($f_rst).setValue(100%).emitAs($_fan3);
  catchEvent($f_rst).setValue(0%).emitAs($_fan1).emitAs($_fan2).emitAs($_fan3);
  // Printer done
  catchEvent($d_an1).emitAs($d_rst).setValue(100%).emitAs($_dan1);
  catchEvent($d_an2).emitAs($d_rst).setValue(100%).emitAs($_dan2);
  catchEvent($d_an3).emitAs($d_rst).setValue(100%).emitAs($_dan3);
  catchEvent($d_rst).setValue(0%).emitAs($_dan1).emitAs($_dan2).emitAs($_dan3);
  // Standby
  var standby_animation_1 = genSmoothOut(genLastEventParam($_san1), &TRANSITION_TIME);
  var standby_animation_2 = genSmoothOut(genLastEventParam($_san2), &TRANSITION_TIME);
  var standby_animation_3 = genSmoothOut(genLastEventParam($_san3), &TRANSITION_TIME);
  // Busy
  var busy_animation_1 = genSmoothOut(genLastEventParam($_ban1), &TRANSITION_TIME);
  var busy_animation_2 = genSmoothOut(genLastEventParam($_ban2), &TRANSITION_TIME);
  var busy_animation_3 = genSmoothOut(genLastEventParam($_ban3), &TRANSITION_TIME);
  // Paused
  var paused_animation_1 = genSmoothOut(genLastEventParam($_pan1), &TRANSITION_TIME);
  var paused_animation_2 = genSmoothOut(genLastEventParam($_pan2), &TRANSITION_TIME);
  var paused_animation_3 = genSmoothOut(genLastEventParam($_pan3), &TRANSITION_TIME);
  // Fillament Change
  var filchange_animation_1 = genSmoothOut(genLastEventParam($_fan1), &TRANSITION_TIME);
  var filchange_animation_2 = genSmoothOut(genLastEventParam($_fan2), &TRANSITION_TIME);
  var filchange_animation_3 = genSmoothOut(genLastEventParam($_fan3), &TRANSITION_TIME);
  // Done
  var done_animation_1 = genSmoothOut(genLastEventParam($_dan1), &TRANSITION_TIME);
  var done_animation_2 = genSmoothOut(genLastEventParam($_dan2), &TRANSITION_TIME);
  var done_animation_3 = genSmoothOut(genLastEventParam($_dan3), &TRANSITION_TIME);
  // Constants
  var SMOOTING_LIGHT = 1s;
  var SMOOTING_TRANSITION = 1s;
  // Temporary stuff
  // Booting conditions
  catchEvent($INIT).emitAs($stand).setValue(100%).emitAs($brigh).emitAs($front).setValue(#000fff).emitAs($color);
  catchEvent($INIT).emitAs($_STRT).emitAs($_DONE).emitAs($_PROC).emitAs($_BUSY);
  catchEvent($BOOT).emitAs($stand).emitAs($STRT).emitAs($SHUT);
  catchEvent($CONNE).emitAs($_STRT);
  catchEvent($DISCO).emitAs($SHUT).emitAs($_DONE).setValue(0%).emitAs($light);
  catchEvent($kread).emitAs($stand);
  catchEvent($kdisc).emitAs($SHUT).emitAs($_DONE);
  catchEvent($kshut).emitAs($SHUT).emitAs($_DONE).setValue(0%).emitAs($light);
  // Homing
  catchEvent($clean).emitAs($PROC).emitAs($_DONE).emitAs($_HEAT).emitAs($_SHUT);
  catchEvent($calib).emitAs($PROC).emitAs($_DONE).emitAs($_HEAT).emitAs($_SHUT);
  catchEvent($homin).emitAs($PROC).emitAs($_DONE).emitAs($_HEAT).emitAs($_SHUT);
  catchEvent($level).emitAs($PROC).emitAs($_DONE).emitAs($_HEAT).emitAs($_SHUT);
  catchEvent($meshi).emitAs($PROC).emitAs($_DONE).emitAs($_HEAT).emitAs($_SHUT);
  // Notification states
  catchEvent($test).emitAs($reset).setValue(100%).emitAs($s_tes).emitAs($_DONE).emitAs($_BUSY).emitAs($_FILC);
  catchEvent($busy).emitAs($reset).setValue(100%).emitAs($s_bus).emitAs($_PROC).emitAs($_DONE).emitAs($_HEAT).emitAs($_FILC);
  catchEvent($print).emitAs($reset).setValue(100%).emitAs($s_bus).emitAs($_HEAT);
  catchEvent($heati).emitAs($HEAT).emitAs($_DONE);
  catchEvent($off).emitAs($SHUT).emitAs($_DONE).emitAs($_FILC);
  catchEvent($stand).emitAs($reset).setValue(100%).emitAs($s_std).emitAs($_DONE).emitAs($_BUSY).emitAs($_FILC);
  catchEvent($stdby).emitAs($_PROC).emitAs($_HEAT);
  catchEvent($pause).emitAs($reset).setValue(100%).emitAs($s_pau).emitAs($_HEAT);
  catchEvent($done).emitAs($reset).setValue(100%).emitAs($s_std).emitAs($DONE).emitAs($_BUSY);
  // Animation Value State
  catchEvent($booti).emitAs($STRT).emitAs($_SHUT).emitAs($_DONE);
  catchEvent($toggl).emitAs($v_tog).emitAs($v_lig).emitAs($_DONE);
  catchEvent($light).emitAs($v_lig).emitAs($_DONE);
  catchEvent($progr).emitAs($v_pro);
  catchEvent($color).emitAs($v_col).emitAs($_SHUT).emitAs($_DONE);
  catchEvent($brigh).emitAs($v_bri).setValue(100%).emitAs($v_tog).emitAs($_SHUT).emitAs($_DONE);
  catchEvent($busy).emitAs($BUSY);
  catchEvent($print).emitAs($BUSY).emitAs($_FILC);
  catchEvent($error).setValue(100%).emitAs($v_err);
  catchEvent($filch).emitAs($FILC);
  // clear done or busy
  catchEvent($_STRT).setValue(0%).emitAs($v_boo);
  catchEvent($STRT).setValue(100%).emitAs($v_boo);
  catchEvent($_DONE).setValue(0%).emitAs($v_don);
  catchEvent($DONE).setValue(100%).emitAs($v_don);
  catchEvent($_HEAT).setValue(0%).emitAs($v_hea);
  catchEvent($HEAT).setValue(100%).emitAs($v_hea);
  catchEvent($_BUSY).setValue(0%).emitAs($v_bus);
  catchEvent($BUSY).setValue(100%).emitAs($v_bus);
  catchEvent($_PROC).setValue(0%).emitAs($v_prc);
  catchEvent($PROC).setValue(100%).emitAs($v_prc);
  catchEvent($_SHUT).setValue(0%).emitAs($v_shu);
  catchEvent($SHUT).setValue(100%).emitAs($v_shu);
  catchEvent($_FILC).setValue(0%).emitAs($v_fch);
  catchEvent($FILC).setValue(100%).emitAs($v_fch);

  catchEvent($reset).setValue(0%).emitAs($v_err).emitAs($v_dis).emitAs($v_boo).emitAs($v_prc).emitAs($v_shu).emitAs($s_tes).emitAs($s_std).emitAs($s_bus).emitAs($s_pau);

  var notification_state_testing = genSmoothOut(genLastEventParam($s_tes), &SMOOTING_TRANSITION);
  var notification_state_standby = genSmoothOut(genLastEventParam($s_std), &SMOOTING_TRANSITION);
  var notification_state_printing = genSmoothOut(genLastEventParam($s_bus), &SMOOTING_TRANSITION);
  var notification_state_pause = genSmoothOut(genLastEventParam($s_pau), &SMOOTING_TRANSITION);

  var value_booting = genSmoothOut(genLastEventParam($v_boo), &SMOOTING_TRANSITION);
  var value_progress = genLastEventParam($v_pro);
  var value_color = genSmoothOut(genLastEventParam($v_col), &SMOOTING_TRANSITION);
  var value_brightness = genSmoothOut(mapValue(genLastEventParam($v_bri), 5%, 100%, 1%, 100%), &SMOOTING_TRANSITION);
  var value_printing = genSmoothOut(genLastEventParam($v_bus), &SMOOTING_TRANSITION);
  var value_light = genSmoothOut(genLastEventParam($v_lig), &SMOOTING_TRANSITION);
  var value_error = genSmoothOut(genLastEventParam($v_err), &SMOOTING_TRANSITION);
  var value_processing = genSmoothOut(genLastEventParam($v_prc), &SMOOTING_TRANSITION);
  var value_shutdown = genSmoothOut(genLastEventParam($v_shu), &SMOOTING_TRANSITION);
  var value_heating = genSmoothOut(genLastEventParam($v_hea), &SMOOTING_TRANSITION);
  var value_done = genSmoothOut(genLastEventParam($v_don), &SMOOTING_TRANSITION);
  var value_not_done = mapValue(value_done, 0%, 100%, 100%, 0%);
  var value_filchange = genSmoothOut(genLastEventParam($v_fch), &SMOOTING_TRANSITION);
  var value_not_filchange = mapValue(value_filchange, 0%, 100%, 100%, 0%);

  var progress_time = mapValue(value_progress, 0%, 100%, 1s, 100s);
  // User Animations on portal
  siftSegments({ segment($porta); }, {
    // Printer test animation
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(1s, #ff0000).animFill(1s, #00ff00).animFill(1s, #0000ff).animFill(1s, #ff00ff).animFill(1s, #ffff00).animFill(1s, #00ffff).animFill(1s, #ffffff).animFill(1s, #000000));
        addDrawing(0s, Infinity, animPlasmaShot(8s, #ffffff, 1%));
      }).modifyBrightness(&notification_state_testing).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done);
    // Printer standby
      addLayer(0s, Infinity, {
        setDrawing(0s, Infinity, animFill(Infinity, &value_color));
        subDrawing(0s, Infinity, animColorGradient5(13s, #4f0000, #450000, #000000, #730000, #400000, 100%, 30%));
        subDrawing(0s, Infinity, animColorGradient5(19s, #002100, #002e00, #005700, #000000, #004500, 100%, 30%));
        subDrawing(0s, Infinity, animColorGradient5(23s, #000000, #000038, #00004d, #00001f, #000057, 100%, 30%));
      }).modifyBrightness(&standby_animation_1).modifyBrightness(&notification_state_standby).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
      addLayer(0s, Infinity, {
        setDrawing(0s, Infinity, animFill(Infinity, &value_color));
        subDrawing(0s, Infinity, animColorGradient5(13s, #4f0000, #450000, #000000, #730000, #400000, 100%, 30%));
        subDrawing(0s, Infinity, animColorGradient5(19s, #002100, #002e00, #005700, #000000, #004500, 100%, 30%));
        subDrawing(0s, Infinity, animColorGradient5(23s, #000000, #000038, #00004d, #00001f, #000057, 100%, 30%));
        scaLayer(0s, Infinity, {
          setDrawing(0s, Infinity, animFill(Infinity, #ffffff));
          subDrawing(0s, Infinity, animPlasmaShot(60s, #ffffff, 3%));
          subDrawing(0s, Infinity, animPlasmaShot(-40s, #ffffff, 3%));
        });
      }).modifyBrightness(&standby_animation_2).modifyBrightness(&notification_state_standby).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
      addLayer(0s, Infinity, {
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animPlasmaShot(17.5s, &value_color, 40%));
          addDrawing(0s, Infinity, animPlasmaShot(22.5s, &value_color, 40%));
          addDrawing(8.75s, Infinity, animPlasmaShot(17.5s, &value_color, 40%));
          addDrawing(11.25s, Infinity, animPlasmaShot(22.5s, &value_color, 40%));
          scaLayer(0s, Infinity, {
            addDrawing(0s, Infinity, animLoadingBar(10s, #ffffff, #000000));
          }).modifyTimeSet(5s);
        });
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animPlasmaShot(-17.5s, &value_color, 40%));
          addDrawing(0s, Infinity, animPlasmaShot(-22.5s, &value_color, 40%));
          addDrawing(8.75s, Infinity, animPlasmaShot(-17.5s, &value_color, 40%));
          addDrawing(11.25s, Infinity, animPlasmaShot(-22.5s, &value_color, 40%));
          scaLayer(0s, Infinity, {
            addDrawing(0s, Infinity, animLoadingBar(10s, #000000, #ffffff));
          }).modifyTimeSet(5s);
        });
        subLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animPlasmaShot(10s, #808080, 25%));
          addDrawing(0s, Infinity, animPlasmaShot(10s, #808080, 100%));
        }).modifyTimeSet(5s);
      }).modifyBrightness(&standby_animation_3).modifyBrightness(&notification_state_standby).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
    // Printer busy
      addLayer(0s, Infinity, {
        addLayer(0s, Infinity, {
          addLayer(0s, Infinity, {
            addDrawing(-100s, Infinity, animLoadingBar(200s, &value_color, #000000).animFill(Infinity, &value_color));
            scaLayer(0s, Infinity, {
              addDrawing(0s, Infinity, animLoadingBar(100s, #000000, #ffffff).animFill(Infinity, #ffffff));
            }).modifyTimeSet(50s);
          });
          addLayer(0s, Infinity, {
            addDrawing(-100s, Infinity, animLoadingBar(-200s, #000000, &value_color).animFill(Infinity, &value_color));
            scaLayer(0s, Infinity, {
              addDrawing(0s, Infinity, animLoadingBar(100s, #ffffff, #000000).animFill(Infinity, #ffffff));
            }).modifyTimeSet(50s);
          });
        }).modifyTimeSet(&progress_time);
      }).modifyBrightness(&busy_animation_1).modifyBrightness(&notification_state_printing).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
      addLayer(0s, Infinity, {
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animPlasmaShot(30s, &value_color, 100%));
          addDrawing(0s, Infinity, animPlasmaShot(-22s, &value_color, 100%));
        }).modifyBrightness(2%);
        addDrawing(0s, Infinity, animPlasmaShot(8s, &value_color, 10%));
        addDrawing(0s, Infinity, animPlasmaShot(10s, &value_color, 12%));
        addDrawing(0s, Infinity, animPlasmaShot(12.2s, &value_color, 9%));
        addDrawing(0s, Infinity, animPlasmaShot(9s, &value_color, 8%));
        addDrawing(0s, Infinity, animPlasmaShot(-10.2s, &value_color, 13%));
        addDrawing(0s, Infinity, animPlasmaShot(-9s, &value_color, 10%));
        addDrawing(0s, Infinity, animPlasmaShot(-10.4s, &value_color, 11%));
        addDrawing(0s, Infinity, animPlasmaShot(-9.6s, &value_color, 9%));
      }).modifyBrightness(&busy_animation_2).modifyBrightness(&notification_state_printing).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, &value_color));
        scaLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
          scaDrawing(0s, Infinity, animColorRoll(7s, #ffffff, #000000));
          scaDrawing(0s, Infinity, animColorRoll(-9s, #ffffff, #000000));
        });
      }).modifyBrightness(&busy_animation_3).modifyBrightness(&notification_state_printing).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
    // Printer paused
      addLayer(0s, Infinity, {
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animLoadingBar(100s, &value_color, #000000).animFill(Infinity, &value_color));
        }).modifyTimeSet(&progress_time);
        scaDrawing(0s, Infinity, animFade(2s, #141414, #ffffff).animFill(0.5s, #ffffff).animFade(2s, #ffffff, #141414));
      }).modifyBrightness(&paused_animation_1).modifyBrightness(&notification_state_pause).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
    // Printer fillament change
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(1s, #ff4800).animFill(1s, #000000));
      }).modifyBrightness(&filchange_animation_1).modifyBrightness(&value_filchange).modifyBrightness(&value_not_done).modifyBrightness(&value_brightness);
    // Printer done
      addLayer(0s, Infinity, {
        interactive<0x01>(0s, Infinity, $DONE, {
          addLayer(0s, Infinity, {
            addDrawing(0s, Infinity, animLoadingBar(16s, #ffffff, #000000));
            subDrawing(0s, Infinity, animLoadingBar(29s, #ffffff, #000000));
          }).modifyFadeIn(1.5s).modifyTimeSet(10s);
        });
      }).modifyBrightness(&done_animation_1).modifyBrightness(&value_not_filchange).modifyBrightness(&value_done).modifyBrightness(&value_brightness);
      addLayer(0s, Infinity, {
        interactive<0x01>(0s, Infinity, $DONE, {
          addLayer(0s, 10s, {
            addDrawing(0s, Infinity, animPlasmaShot(1s, #ff0000, 5%).animNone(6s));
            addDrawing(0s, Infinity, animPlasmaShot(2s, #00ff00, 5%).animNone(5s));
            addDrawing(0s, Infinity, animPlasmaShot(3s, #0000ff, 5%).animNone(4s));
            addDrawing(0s, Infinity, animPlasmaShot(4s, #ff0000, 5%).animNone(3s));
            addDrawing(0s, Infinity, animPlasmaShot(5s, #00ff00, 5%).animNone(2s));
            addDrawing(0s, Infinity, animPlasmaShot(6s, #0000ff, 5%).animNone(1s));
            addDrawing(0s, Infinity, animPlasmaShot(7s, #ff0000, 5%).animNone(0s));

            addDrawing(1s, Infinity, animPlasmaShot(-1s, #ff0000, 5%).animNone(8s));
            addDrawing(1s, Infinity, animPlasmaShot(-2s, #00ff00, 5%).animNone(7s));
            addDrawing(1s, Infinity, animPlasmaShot(-3s, #0000ff, 5%).animNone(6s));
            addDrawing(1s, Infinity, animPlasmaShot(-4s, #ff0000, 5%).animNone(5s));
            addDrawing(1s, Infinity, animPlasmaShot(-5s, #0000ff, 5%).animNone(4s));
            addDrawing(1s, Infinity, animPlasmaShot(-6s, #00ff00, 5%).animNone(3s));
            addDrawing(1s, Infinity, animPlasmaShot(-7s, #ff0000, 5%).animNone(2s));
          }).modifyFadeOut(1.5s);
          addLayer(9.5s, Infinity, {
            addDrawing(0s, Infinity, animLoadingBar(16s, #ffffff, #000000));
            subDrawing(0s, Infinity, animLoadingBar(29s, #ffffff, #000000));
          }).modifyFadeIn(1.5s).modifyTimeSet(10s);
        });
      }).modifyBrightness(&done_animation_2).modifyBrightness(&value_not_filchange).modifyBrightness(&value_done).modifyBrightness(&value_brightness);
      addLayer(0s, Infinity, {
        interactive<0x01>(0s, Infinity, $DONE, {
          addLayer(0s, 10s, {
            addDrawing(0s, Infinity, animRainbow(5s, 60%));
            addDrawing(1.1s, 1s, animPlasmaShot(1s, #ffffff, 10%));
            addDrawing(1.4s, 1s, animPlasmaShot(-1s, #ffffff, 10%));
            addDrawing(1.8s, 1s, animPlasmaShot(1s, #ffffff, 10%));
          }).modifyFadeIn(1s).modifyFadeOut(1.5s);
          addLayer(9.5s, Infinity, {
            addDrawing(0s, Infinity, animLoadingBar(16s, #ffffff, #000000));
            subDrawing(0s, Infinity, animLoadingBar(29s, #ffffff, #000000));
          }).modifyFadeIn(1.5s).modifyTimeSet(10s);
        });
      }).modifyBrightness(&done_animation_3).modifyBrightness(&value_not_filchange).modifyBrightness(&value_done).modifyBrightness(&value_brightness);
  });
  // Notification States
  siftSegments({ segment($front); }, {
    // Printer test
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(1s, #ff0000).animFill(1s, #00ff00).animFill(1s, #0000ff).animFill(1s, #ff00ff).animFill(1s, #ffff00).animFill(1s, #00ffff).animFill(1s, #ffffff).animFill(1s, #000000));
        addDrawing(0s, Infinity, animPlasmaShot(8s, #ffffff, 1%));
      }).modifyBrightness(&notification_state_testing).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done);
    // Printer standby notification
      addLayer(0s, Infinity, {
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animFill(Infinity, &value_color));
        }).modifyBrightness(3%);
      }).modifyBrightness(&notification_state_standby).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done);
    // Printer busy notification
      addLayer(0s, Infinity, {
        var show_heating = mapValue(value_progress, 0%, 0.01%, 100%, 0%);
        var show_progress = mapValue(value_progress, 0.01%, 0.02%, 0%, 100%);
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animColorRoll(5s, #ff2200, #ff2200));
          scaDrawing(0s, Infinity, animColorRoll(7s, #ffffff, #000000));
          scaDrawing(0s, Infinity, animColorRoll(-9s, #ffffff, #000000));
        }).modifyBrightness(&show_heating);
        addLayer(0s, Infinity, {
          var backgroud = addValues(#060606, mulValues(value_color, #030303));
          addLayer(0s, Infinity, {
            addDrawing(0s, Infinity, animLoadingBar(100s, &value_color, &backgroud).animFill(Infinity, &value_color));
          }).modifyTimeSet(&progress_time);
          scaLayer(0s, Infinity, {
            addDrawing(0s, Infinity, animFill(Infinity, #b8b8b8));
            addDrawing(0s, Infinity, animPlasmaShot(10s, #ffffff, 5%));
          });
        }).modifyBrightness(&show_progress);
      }).modifyBrightness(&notification_state_printing).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done);
    // Printer paused notification
      addLayer(0s, Infinity, {
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animLoadingBar(100s, &value_color, #ffffff).animFill(Infinity, &value_color));
        }).modifyTimeSet(&progress_time);
        scaDrawing(0s, Infinity, animFade(2s, #000000, #ffffff).animFill(0.5s, #ffffff).animFade(2s, #ffffff, #000000));
      }).modifyBrightness(&notification_state_pause).modifyBrightness(&value_not_filchange).modifyBrightness(&value_not_done);
    // Printer fillament change notification
      addLayer(0s, Infinity, {
        addLayer(0s, Infinity, {
          addDrawing(0s, Infinity, animLoadingBar(100s, &value_color, #ffffff).animFill(Infinity, &value_color));
        }).modifyTimeSet(&progress_time);
        scaDrawing(0s, Infinity, animFade(2s, #000000, #ffffff).animFill(0.5s, #ffffff).animFade(2s, #ffffff, #000000));
      }).modifyBrightness(&value_filchange).modifyBrightness(&value_not_done);
    // Printer done
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animRainbow(5s, 60%));
      }).modifyBrightness(&value_done).modifyBrightness(&value_not_filchange);
  });
  // Printer is processing
    siftSegments({ segment($front); }, {
      subLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
      }).modifyBrightness(&value_processing);
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animColorGradient5(5s, #000000, #000000, #ffffff, #000000, #000000, 100%, 100%));
      }).modifyBrightness(&value_processing);
    });
  // Printer heating
    siftSegments({ segment($front); }, {
      subLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
      }).modifyBrightness(&value_heating);
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animColorRoll(5s, #ff2200, #ff2200));
        scaDrawing(0s, Infinity, animColorRoll(7s, #ffffff, #000000));
        scaDrawing(0s, Infinity, animColorRoll(-9s, #ffffff, #000000));
      }).modifyBrightness(&value_heating);
    });
  // Error
    siftSegments({ segment($front); segment($porta); }, {
      subLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
      }).modifyBrightness(&value_error);
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFade(0.05s, #000000, #ff0000).animFill(0.1s, #ff0000).animFade(0.05s, #ff0000, #000000).animFill(0.2s, #000000).animFade(0.01s, #000000, #ff0000).animFill(2s, #ff0000).animFade(1s, #ff0000, #000000).animFill(1s, #000000));
        siftSegments({ segment($porta); }, {
          scaLayer(0s, Infinity, {
            addDrawing(0s, Infinity, animLoadingBar(16s, #ffffff, #000000));
            subDrawing(0s, Infinity, animLoadingBar(29s, #ffffff, #000000));
          }).modifyTimeSet(10s);
        });
      }).modifyBrightness(&value_error);
    });
  // Shutdown
    siftSegments({ segment($front); segment($porta); }, {
      subLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
      }).modifyBrightness(&value_shutdown);
    });
  // Booting
    siftSegments({ segment($front); segment($porta); }, {
      subLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
      }).modifyBrightness(&value_booting);
      addLayer(0s, Infinity, {
        scope(1s, Infinity, {
          addLayer(0s, 10s, {
            addDrawing(0s, 10s, animColorGradient5(6s, #000000, &value_color, &value_color, &value_color, &value_color, 100%, 100%).animFade(0.1s, &value_color, #ffffff).animFill(1s, #ffffff).animFade(2.9s, #ffffff, #000000));
            scaDrawing(0s, 10s, animLoadingBar(6s, #ffffff, #000000).animNone(Infinity));
          }).modifyFadeOut(1s);
          siftSegments({ segment($porta); }, {
            addLayer(10s, Infinity, {
              addDrawing(0s, Infinity, animLoadingBar(16s, #ffffff, #000000));
              subDrawing(0s, Infinity, animLoadingBar(29s, #ffffff, #000000));
            }).modifyTimeSet(10s);
          });
          siftSegments({ segment($front); }, {
            addDrawing(10s, Infinity, animPlasmaShot(1s, #c9c9c9, 25%).animPlasmaShot(-1s, #c9c9c9, 25%).animNone(2s));
          });
        });
      }).modifyBrightness(&value_booting);
    });
  // Connected animation
    siftSegments({ segment($porta); segment($front); }, {
      interactive<0x01>(0s, Infinity, $CONNE, {
        scope(0s, 10s, {
          addLayer(0.2s, 2s, {
            addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
          }).modifyFadeIn(0.2s).modifyFadeOut(1.5s);
        });
      });
    });
  // Disconnected
    siftSegments({ segment($front); }, {
      interactive<0x01>(0s, Infinity, $DISCO, {
        scaDrawing(0s, 17s, animFade(1s, #ffffff, #171717).animFill(15s, #171717).animFade(1s, #171717, #ffffff));
        addDrawing(0s, 17s, animNone(1s).animPlasmaShot(1s, #c9c9c9, 25%).animPlasmaShot(-1s, #c9c9c9, 25%).animNone(1s));
      });
    });
  // Lightning Button
    siftSegments({ segment($porta); }, {
      var scale = mapValue(value_light, 0%, 20%, 100%, 0%);
      var add = value_light;
      scaLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
      }).modifyBrightness(&scale);
      addLayer(0s, Infinity, {
        addDrawing(0s, Infinity, animFill(Infinity, #ffffff));
      }).modifyBrightness(&add);
    });
  // Blink animation
    siftSegments({ segment($porta); }, {
      interactive<0x01>(0s, Infinity, $blink, {
        scope(0s, 10s, {
          scaDrawing(0s, 4s, animFade(0.5s, #ffffff, #000000).animFill(3s, #000000).animFade(0.5s, #000000, #ffffff));
          setDrawing(1s, 2s, animFill(Infinity, #ffffff));
        });
      });
    });
